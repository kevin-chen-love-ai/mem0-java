# =================================================================
# Mem0 Java Configuration Example
# =================================================================
# 
# This file demonstrates how to configure Mem0 Java using properties file
#
# Usage Examples:
#
# 1. Load from file:
#    Mem0 mem0 = new Mem0("config/mem0.properties");
#
# 2. Use Builder:
#    Mem0 mem0 = Mem0.builder()
#        .loadFromFile("config/mem0.properties")
#        .build();
#
# 3. Load from classpath:
#    Mem0 mem0 = Mem0.builder()
#        .loadFromClasspath("mem0.properties")
#        .build();
#
# =================================================================

# =================================================================
# Vector Store Configuration
# =================================================================
# Supported providers: milvus, inmemory

# Provider type
mem0.vectorstore.provider=milvus

# Host and port
mem0.vectorstore.host=localhost
mem0.vectorstore.port=19530

# Authentication token (optional)
# mem0.vectorstore.token=your-milvus-token

# Database name (optional)
# mem0.vectorstore.database=mem0_db

# Additional custom configurations
mem0.vectorstore.custom.timeout=30000
mem0.vectorstore.custom.retries=3
mem0.vectorstore.custom.batch_size=100

# =================================================================
# Graph Store Configuration
# =================================================================
# Supported providers: neo4j, inmemory

# Provider type
mem0.graphstore.provider=neo4j

# Connection URI
mem0.graphstore.uri=bolt://localhost:7687

# Authentication
mem0.graphstore.username=neo4j
mem0.graphstore.password=password

# Additional custom configurations
mem0.graphstore.custom.max_connection_lifetime=3600000
mem0.graphstore.custom.max_connection_pool_size=50
mem0.graphstore.custom.connection_acquisition_timeout=60000

# =================================================================
# Large Language Model Configuration
# =================================================================
# Supported providers: qwen, openai, claude, gemini, rulebased

# Provider type
mem0.llm.provider=qwen

# API Key
mem0.llm.apikey=your-llm-api-key

# Model name
mem0.llm.model=qwen-plus

# Temperature for text generation (0.0-1.0)
mem0.llm.temperature=0.7

# Maximum tokens for response
mem0.llm.max_tokens=1000

# Additional custom configurations
mem0.llm.custom.base_url=https://dashscope.aliyuncs.com/api/v1
mem0.llm.custom.timeout=30000
mem0.llm.custom.max_retries=3

# =================================================================
# Embedding Model Configuration
# =================================================================
# Supported providers: aliyun, openai, huggingface, mock

# Provider type
mem0.embedding.provider=aliyun

# API Key
mem0.embedding.apikey=your-embedding-api-key

# Model name
mem0.embedding.model=text-embedding-v1

# Additional custom configurations
mem0.embedding.custom.base_url=https://dashscope.aliyuncs.com/api/v1
mem0.embedding.custom.timeout=30000
mem0.embedding.custom.batch_size=10

# =================================================================
# Environment-specific Overrides
# =================================================================
# These can be overridden by:
# 1. System properties: -Dmem0.vectorstore.host=prod-host
# 2. Environment variables: MEM0_VECTORSTORE_HOST=prod-host

# Production Environment Example
# mem0.vectorstore.host=prod-milvus.example.com
# mem0.vectorstore.port=19530
# mem0.vectorstore.token=${MILVUS_TOKEN}
# mem0.graphstore.uri=bolt://prod-neo4j.example.com:7687
# mem0.graphstore.password=${NEO4J_PASSWORD}
# mem0.llm.apikey=${LLM_API_KEY}
# mem0.embedding.apikey=${EMBEDDING_API_KEY}

# Development Environment Example
# mem0.vectorstore.host=localhost
# mem0.vectorstore.port=19530
# mem0.graphstore.uri=bolt://localhost:7687
# mem0.graphstore.username=neo4j
# mem0.graphstore.password=neo4j123

# =================================================================
# Performance Tuning
# =================================================================
# These are additional configurations for performance optimization

# Vector store performance
mem0.vectorstore.custom.index_type=IVF_FLAT
mem0.vectorstore.custom.metric_type=L2
mem0.vectorstore.custom.nprobe=10

# Graph store performance
mem0.graphstore.custom.query_timeout=30000
mem0.graphstore.custom.transaction_timeout=60000

# LLM performance
mem0.llm.custom.stream=false
mem0.llm.custom.top_p=0.8
mem0.llm.custom.top_k=40

# Embedding performance
mem0.embedding.custom.dimension=1536
mem0.embedding.custom.normalize=true

# =================================================================
# Logging and Monitoring
# =================================================================
# Additional configurations for logging and monitoring

mem0.vectorstore.custom.enable_logging=true
mem0.graphstore.custom.enable_metrics=true
mem0.llm.custom.log_requests=false
mem0.embedding.custom.log_responses=false